Use the C:\Program Files (x86)\Arduino\hardware\tools\avr\bin\avr-readelf.exe to get detailed memory usage.
.elf file is found in the build directory as indicated in the BuildResultsLocation.txt file.
Use command
"C:\Program Files (x86)\Arduino\hardware\tools\avr\bin\avr-readelf.exe" -all <elf file name> > elfinfo.txt

Then the Section Headers show the .data and .bss sections which are in RAM.
Each section in that section headers has an Nr index associated with (an Id associated with it)
Each symbol in the symbol table lies in only one section and that is indicated by the Id number shown in the
Ndx column   So you can tell if a symbol lies in RAM and how much RAM space a given symbol takes by looking to see
if that symbol has the Ndx as either the Id number for the .data or .bss sections.

Example is as follows:

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] .data             PROGBITS        00800200 002f9e 00006e 00  WA  0   0  1
  [ 2] .text             PROGBITS        00000000 000094 002f0a 00  AX  0   0  2
  [ 3] .bss              NOBITS          0080026e 00300c 000211 00  WA  0   0  1
  [ 4] .comment          PROGBITS        00000000 00300c 000011 01  MS  0   0  1
  [ 5] .note.gnu.avr.dev NOTE            00000000 003020 000040 00      0   0  4
  [ 6] .debug_aranges    PROGBITS        00000000 003060 0001b0 00      0   0  8
  [ 7] .debug_info       PROGBITS        00000000 003210 0076b1 00      0   0  1
  [ 8] .debug_abbrev     PROGBITS        00000000 00a8c1 001342 00      0   0  1
  [ 9] .debug_line       PROGBITS        00000000 00bc03 001acd 00      0   0  1
  [10] .debug_frame      PROGBITS        00000000 00d6d0 000400 00      0   0  4
  [11] .debug_str        PROGBITS        00000000 00dad0 0014d9 00      0   0  1
  [12] .debug_loc        PROGBITS        00000000 00efa9 002e8b 00      0   0  1
  [13] .debug_ranges     PROGBITS        00000000 011e34 000240 00      0   0  1
  [14] .shstrtab         STRTAB          00000000 0165d1 0000b4 00      0   0  1
  [15] .symtab           SYMTAB          00000000 012074 0016e0 10     16 248  4
  [16] .strtab           STRTAB          00000000 013754 002e7d 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings)
  I (info), L (link order), G (group), T (TLS), E (exclude), x (unknown)
  O (extra OS processing required) o (OS specific), p (processor specific)


Symbol table '.symtab' contains 366 entries:
   Num:    Value  Size Type    Bind   Vis      Ndx Name
     3: 0080026e     0 SECTION LOCAL  DEFAULT    3 
    27: 008002de   157 OBJECT  LOCAL  DEFAULT    3 Serial
   116: 00800473    12 OBJECT  LOCAL  DEFAULT    3 _ZN11PWMServoNew9servoInf
   126: 0080037b    44 OBJECT  LOCAL  DEFAULT    3 _ZN15avrTimerCounter13tim
   183: 008003a7   204 OBJECT  LOCAL  DEFAULT    3 myservos
   184: 008002da     4 OBJECT  LOCAL  DEFAULT    3 timer0_millis
   185: 008002d9     1 OBJECT  LOCAL  DEFAULT    3 timer0_fract
   186: 008002d5     4 OBJECT  LOCAL  DEFAULT    3 timer0_overflow_count
   187: 008002d3     2 OBJECT  LOCAL  DEFAULT    3 cmdLineIndex
   188: 0080026e     1 OBJECT  LOCAL  DEFAULT    3 cmdComplete
   189: 0080026f   100 OBJECT  LOCAL  DEFAULT    3 cmdLine
   282: 0080047f     0 NOTYPE  GLOBAL DEFAULT    3 __bss_end
   319: 0080026e     0 NOTYPE  GLOBAL DEFAULT    3 __bss_start
.
.
.
.
.
     1: 00800200     0 SECTION LOCAL  DEFAULT    1 
    35: 00800202    72 OBJECT  LOCAL  DEFAULT    1 _ZN15avrTimerCounter18Tim
   182: 0080024a    18 OBJECT  LOCAL  DEFAULT    1 _ZTV14HardwareSerial
   190: 00800200     2 OBJECT  LOCAL  DEFAULT    1 _ZL10delimiters
   305: 0080026e     0 NOTYPE  GLOBAL DEFAULT    1 __data_end
   341: 0080026e     0 NOTYPE  GLOBAL DEFAULT    1 _edata
   358: 00800200     0 NOTYPE  GLOBAL DEFAULT    1 __data_start
